{"version":3,"sources":["components/parallax.js","components/cards.js","components/work.js","components/about.js","components/header.js","App.js","reportWebVitals.js","index.js"],"names":["StyledParallaxDiv","styled","div","props","off","StyledParallaxDiv2","MyParallax","useState","offSet","setOffset","useEffect","handleYScroll","window","pageYOffset","addEventListener","removeEventListener","MyCard","children","className","SplitDiv","right","DesignLink","to","value","onMouseEnter","onMouseLeave","list","id","text","img","initialState","state","LinkedList","onShow","setOnShow","handleShowLeave","console","log","useRouteMatch","path","url","map","work","num","src","About","Home","DesignButton","Head","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e916500.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\n\nconst StyledParallaxDiv = styled.div`\n  text-align: center;\n  margin: auto;\n  position: absolute;\n  margin: 100px 500px ;\n  height: 200px;\n  width: 200px;\n  background-color: none;\n  border: 3px solid red;\n  transform: ${props => `translateY(${(props.off) * 1}px) ` };\n  \n  z-index: -3;\n \n`\nconst StyledParallaxDiv2 = styled.div`\n  text-align: center;\n  position: absolute;\n  margin: 700px 500px ;\n  height: 250px;\n  width: 250px;\n  background-color: none;\n  border-radius: 50%;\n  border: 3px solid blue;\n  transform: ${props => `translateY(${-(props.off) * 0.8}px) ` };\n  z-index: -4;  \n`\n\n\nexport const MyParallax = () => {\n\n\n  \n  const [offSet, setOffset] = useState(0)\n\n  useEffect(() => {\n\n     const handleYScroll = () => {\n       setOffset(window.pageYOffset)\n     }\n\n\n\n     window.addEventListener('scroll', handleYScroll)\n\n    return () => {\n      window.removeEventListener('scroll', handleYScroll)\n \n\n      }\n  }, [])\n\n\n  return (\n    <div>\n       <StyledParallaxDiv off={offSet}/> \n    <StyledParallaxDiv2 off={offSet}/>\n    </div>\n   \n\n  )\n};\n\n{/* & @keyframes App-logo-spin {\n  from {\n    transform: ${props => `translateY(${(props.off) * 1}px) ` };\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\nanimation: App-logo-spin infinite 20s linear;*/}","import React from \"react\";\nimport '../styles.css'\n\nconst MyCard = ({ children }) => <div className=\"myCard\">{children}</div>;\n\nexport default MyCard;\n","import React, {useState, useEffect} from 'react';\nimport MyCard from './cards';\nimport styled from 'styled-components';\nimport '../styles.css';\nimport {Link, useRouteMatch, Switch, Route} from 'react-router-dom';\n\nconst SplitDiv = styled.div`\n  text-align: ${props => props.right ? 'right' : 'left'};\n  background-size: cover;\n  margin: 20px;\n  padding: 20px;\n  font-size: 80px;\n`\nconst DesignLink = ({ children, ...props }) => (\n    <Link to={props.to} className='linkMap' value={props.value} onMouseEnter={props.onMouseEnter} onMouseLeave={props.onMouseLeave}>\n      {children}\n    </Link>\n  );\n\n//prototype for work list\nconst list =  [{\n  id:1,\n  text: \"Indigo-Graduation-project\",\n  img: \"https://picsum.photos/200/300\"\n  }, {\n    id:2,\n    text:'Untitled-Fulldome-exp.',\n    img: \"https://picsum.photos/230/350\"\n  }, {\n    id:3,\n    text:'Freaks-Film-Launch',\n    img: \"https://picsum.photos/200/200\"\n  }, { \n    id:4,\n    text:'FreekyPeep-Videomapping',\n    img: \"https://picsum.photos/300/300\"\n    }, {\n      id:5,\n      text: 'D&AD-New-Blood-Awards',\n    img: \"https://picsum.photos/300/400\"\n    }, {\n      id: 6,\n      text: 'Noir-Podcast-design',\n    img: \"https://picsum.photos/200/300\"\n    }];\n\n\n\n\n    \n   //initialstate to pass to state\nconst initialState = {\n  state: false,\n  id: 0,\n  text: 'aahah',\n  img: '',\n}\n\nconst LinkedList = (props) => {\n\n\nconst [onShow, setOnShow] = useState(initialState);\n\n\nuseEffect(() => {\n  console.log('render')\n \n}, [onShow.state])\n\n\nfunction handleShowLeave(onShow){\n  setOnShow({\n    ...onShow,\n    state: false,\n  })\n}\n\n\nconst isOdd = num => {\n  return num % 2\n}\n\nlet {path, url} = useRouteMatch();\n\n      return (\n        <div>\n\n\n       \n          {list.map((work) => \n            <SplitDiv key={work.id} right={isOdd(work.id)}> \n\n                <DesignLink to={`${url}/${work.text}`} value={onShow} id={work.id} onMouseEnter={() => {\n                  setOnShow({\n                      ...onShow,\n                      state: true,\n                      id: work.id,\n                      text: work.text,\n                      img: work.img,\n                        })\n                 }} onMouseLeave={handleShowLeave}>\n                     {work.text}\n                </DesignLink>\n               \n            </SplitDiv>\n          )}\n          \n          <div className='overlay'>\n            {onShow.state  && <MyCard  id={onShow.id}> <h1>{onShow.text}</h1> <img src={onShow.img} className='imgViewer'/> </MyCard> }\n          </div>\n          <Switch>\n          <Route path={`${path}/Indigo-Graduation-project`}>\n            <MyCard />\n          </Route>\n          </Switch>\n     \n\n       </div>\n      \n        \n        \n    )    \n}\n\n// const ShowLink = (...props) => {\n//   const [toShow, setToShow] = useState({\n//     id : '',\n//     container: '' \n//   });\n\n//   const showCard = () => {\n//     setToShow({\n//         id: props.id,\n//         container: props.children\n//       })\n//   }\n\n//   return (\n//     <div>\n//     <MyCard id={props.id}> {props.children} </MyCard>\n//     </div>\n//   )\n\n// }\n\nexport default LinkedList;","import React from 'react';\n\n\nconst About = () => {\n    return (\n        <div>\n            <p>\n\nI'm a creative and dreamy mind based in Milan (but ready to move somewhere else in the world).\n\nAfter a semester of study abroad in Berlin, I graduated with maximum grades in Communication Design in NABA, with a thesis focused on the concept of immersive experiences as a medium for brand communication.\n\nAfter that I started working as Junior Art Director in Jungle, an unconventional communication agency working in the field of brand experiences, guerrilla marketing and launch events.\n\nâ€‹\n\nI'm passionate about everything that is \"to communicate\": today we are seeing companies and artists going over the common boundaries of communication, blending virtual and real spaces and using technologies to create impactful experiences.\n\nMy objective is to become part of this change, creating new ways to communicate and discovering what will be the role of an Art Director in the future.\n            </p>\n        </div>\n    )\n}\n\nexport default About","import React from \"react\";\nimport \"../styles.css\";\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch } from \"react-router-dom\";\nimport LinkedList from './work'\n\n//import {Main} from \"./presentation\";\n\nimport About from \"./about\";\n//import {WorkPage} from \"./work-view\"\n\n//import { ThemeButton } from \"./components/buttons\";\n\n//const Home = () => <Main />;\nconst Home = () => <h1>home</h1>\n//const About = () => <h1>about</h1>\nconst Work = () => {\n  let {url, path} = useRouteMatch()\n  return(\n<h1>work</h1>\n  )}\n\n\nconst DesignButton = ({ children, ...props }) => (\n  <Link to={props.to} className=\"designButton\">\n    {children}\n  </Link>\n);\n// <ThemeButton />\n// route\n\n\nconst Head = () => {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <span>\n         \n          <DesignButton to=\"/\">Home</DesignButton>\n          <DesignButton to=\"/about\">About</DesignButton>\n          <DesignButton to=\"/work\">Work</DesignButton>\n        </span>\n    \n\n        <Switch>\n          <Route exact path=\"/\">\n            <div className='App'>\n            <Home />  \n            </div>\n            \n          </Route>\n\n          <Route path=\"/about\">\n            <div className='aboutstyle'>\n            <About />\n            </div>\n            \n          </Route>\n\n          <Route path=\"/work\">\n           <LinkedList />\n          </Route>\n\n        \n\n        </Switch>\n      </div>\n    </Router>\n\n  );\n};\n\nexport default Head;\n\n// <WorkPage />","import React from 'react';\nimport {MyParallax} from './components/parallax';\nimport Head from './components/header';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <MyParallax/>\n      <Head/>\n      \n    \n      <header className=\"App-header\">\n        <h1>hot </h1>\n      </header>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}